[{"C:\\Users\\gouda\\Documents\\stockapp\\src\\index.tsx":"1","C:\\Users\\gouda\\Documents\\stockapp\\src\\reportWebVitals.ts":"2","C:\\Users\\gouda\\Documents\\stockapp\\src\\App.tsx":"3","C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\index.ts":"4","C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\Card.tsx":"5","C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\Search.tsx":"6","C:\\Users\\gouda\\Documents\\stockapp\\src\\services\\stock.ts":"7"},{"size":478,"mtime":1610894078811,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1030,"mtime":1611022932418,"results":"11","hashOfConfig":"9"},{"size":82,"mtime":1610926792213,"results":"12","hashOfConfig":"9"},{"size":3814,"mtime":1611025835244,"results":"13","hashOfConfig":"9"},{"size":1773,"mtime":1611022956040,"results":"14","hashOfConfig":"9"},{"size":1602,"mtime":1611024807073,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10vgjfs",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gouda\\Documents\\stockapp\\src\\index.tsx",[],["31","32"],"C:\\Users\\gouda\\Documents\\stockapp\\src\\reportWebVitals.ts",[],"C:\\Users\\gouda\\Documents\\stockapp\\src\\App.tsx",[],"C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\index.ts",[],"C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\Card.tsx",["33","34","35","36","37","38","39","40","41"],"C:\\Users\\gouda\\Documents\\stockapp\\src\\components\\Search.tsx",[],"C:\\Users\\gouda\\Documents\\stockapp\\src\\services\\stock.ts",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":3,"column":9,"nodeType":"48","messageId":"49","endLine":3,"endColumn":29},{"ruleId":"46","severity":1,"message":"50","line":11,"column":12,"nodeType":"48","messageId":"49","endLine":11,"endColumn":16},{"ruleId":"46","severity":1,"message":"51","line":11,"column":18,"nodeType":"48","messageId":"49","endLine":11,"endColumn":25},{"ruleId":"46","severity":1,"message":"52","line":12,"column":12,"nodeType":"48","messageId":"49","endLine":12,"endColumn":15},{"ruleId":"46","severity":1,"message":"53","line":12,"column":17,"nodeType":"48","messageId":"49","endLine":12,"endColumn":23},{"ruleId":"46","severity":1,"message":"54","line":14,"column":12,"nodeType":"48","messageId":"49","endLine":14,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":33,"column":30,"nodeType":"57","endLine":33,"endColumn":38},{"ruleId":"46","severity":1,"message":"58","line":44,"column":12,"nodeType":"48","messageId":"49","endLine":44,"endColumn":21},{"ruleId":"46","severity":1,"message":"59","line":44,"column":23,"nodeType":"48","messageId":"49","endLine":44,"endColumn":35},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'getStockFundamentals' is defined but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'eps' is assigned a value but never used.","'setEps' is assigned a value but never used.","'percentChange' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'ticker' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","'stockInfo' is assigned a value but never used.","'setStockInfo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]